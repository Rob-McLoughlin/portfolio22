import Head from 'next/head'
import Image from 'next/image'
import { Box, GitHub, Book, Figma } from '@/atoms/Icon'
import Card from '@/molecules/Card'
import WelcomePlate from '@/organisms/WelcomePlate'
import { useState } from 'react'
import { getSession } from '@/lib/auth'

export default function Home ({ projects, welcome, invite }) {
  const [showWelcome, setShowWelcome] = useState(welcome)

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      {showWelcome && (
        <WelcomePlate invite={invite} closeFn={() => setShowWelcome(false)} />
      )}

      <section id='intro'>
        <div className='mb-4 flex justify-between md:flex-row-reverse md:justify-end md:items-center md:gap-x-4'>
          <div>
            <h1 className='homepage-title font-outfit text-h1 text-ink'>
              Rob McLoughlin
            </h1>
            <span>Product Design @ Chupi &amp; Human</span>
          </div>
          <div className='-mt-4 md:mt-0'>
            <Image alt='My face' src='/profile.png' width={64} height={64} />
          </div>
        </div>
        <summary className='block'>
          <p className='mb-4 md:w-1/2'>
            I am a designer and developer from Dublin with 5 years experience
            defining problems and solving them through data-driven designs and
            good infastructure.
          </p>
        </summary>
      </section>

      <section
        id='jump-off'
        className='py-24 flex flex-col gap-6 md:grid md:grid-cols-2'
      >
        <Card
          icon={<Box />}
          title='Projects &amp; Work'
          body='Some of my work from Chupi and Human along with some free time projects'
          href='/projects'
        />
        <Card
          icon={<GitHub />}
          title='Code'
          href='/code'
          body='Good experiences start at the code level with efficient, best-practice code.'
        />
        <Card
          icon={<Book />}
          title='Books'
          href='/books'
          body='Some books I’ve read recently and liked. Pulled from my own personal Notion.'
        />
        <Card
          icon={<Figma />}
          title='Figma'
          href='/figma'
          body='Live Figma files for you to see how I use Atomic Design and components.'
        />
      </section>

      <section id='projects' className='py-8'>
        <h2 className='mb-4 font-outfit text-ink text-h1'>Recent Projects</h2>
        <p className='md:w-1/2 mb-6'>
          Here is a write up of some recent projects that I’ve done.
        </p>
        <ul className='flex flex-col gap-6 md:grid md:grid-cols-2'>
          {projects.map(({ slug, frontMatter: project }) => {
            return (
              <li key={slug}>
                <Card
                  title={project.title}
                  body={project.description}
                  location={project.at}
                  href={`/projects/${slug}`}
                  icon={<Box />}
                />
              </li>
            )
          })}
        </ul>
      </section>
    </div>
  )
}

export const getServerSideProps = async context => {
  const redirect = {
    redirect: {
      destination: '/login',
      permanent: false
    }
  }

  // Capture the session
  const session = await getSession(context)

  // Show welcome based on url params
  const showWelcome = context.query.welcome === 'true'

  // const files = fs.readdirSync(path.join('projects'))
  let token = null
  const cookies = context.req.headers.cookie
  const authCookie = cookies
    .split(';')
    .find(c => c.trim().startsWith('access-token'))
  if (authCookie) {
    token = authCookie.split('=')[1]
  }

  const baseUrl =
    process.env.NODE_ENV === 'production'
      ? process.env.LIVE_SERVER
      : process.env.DEV_SERVER
  console.log(baseUrl)

  const projectReq = await fetch(`${baseUrl}/api/projects`, {
    headers: {
      authorization: `Bearer ${token}`
    },
    credentials: 'same-origin' // include, *same-origin, omit
  })
  // console.log(projectReq)
  const { projects } = await projectReq.json()

  // const projects = files.map(filename => {
  //   const markdownWithMeta = fs.readFileSync(
  //     path.join('projects', filename),
  //     'utf-8'
  //   )
  //   const { data: frontMatter } = matter(markdownWithMeta)

  //   return {
  //     frontMatter,
  //     slug: filename.split('.')[0]
  //   }
  // })

  // const ordered = projects.sort(p => p.frontMatter.order).slice(0, 2)

  const props = {
    props: {
      projects,
      welcome: showWelcome,
      invite: session
    }
  }
  return props
}
